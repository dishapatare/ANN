import numpy as np
import tensorflow as tf

#Generate sample data
x_train = np.random.randn(1000, 10)
y_train = np.random.randint(0,2,(1000,1))

#Define logistic regression model
model = tf.keras.models.Sequential([
    tf.keras.layers.Dense(1, activation='sigmoid', input_shape=(10,))])

#Compile the model
model.compile(optimizer = 'adam',
              loss = 'binary_crossentropy',
              metrics = ['accuracy'])

#train the model
model.fit(x_train, y_train, epochs=10, batch_size=32, validation_split=0.2)

#Evaluate the model on test data
x_test = np.random.randn(200, 10)
y_test = np.random.randint(0,2,(200,1))

#Calculate the accuracy and loss
loss, accuracy = model.evaluate(x_test, y_test)
print("\nTest Loss : ",loss)
print("Test accuracy : ",accuracy)